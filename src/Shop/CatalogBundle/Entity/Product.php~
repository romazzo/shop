<?php


namespace Shop\CatalogBundle\Entity;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;


/**
 * Product
 *
 * @ORM\Table(name="products")
 * @ORM\Entity
 */
class Product {

    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=30)
     *
     */
    private $name;
    /**
     * @var float
     *
     * @ORM\Column(name="price", type="float")
     *
     */
    private $price;
    /**
     * @var string
     *
     * @ORM\Column(name="image", type="string", length=255, nullable=true)
     *
     */
    private $image;
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     *
     */
    private $createdAt;
    /**
     * @var int
     *
     * @ORM\Column(name="shows", type="integer")
     */
    private $shows;
    /**
     * @var bool
     *
     * @ORM\Column(name="is_active", type="boolean")
     *
     */
    private $isActive;
    /**
     * @var int
     *
     * @ORM\Column(name="rating", type="integer")
     */
    private $rating;

    /**
     * @ORM\ManyToOne(targetEntity="Shop\CatalogBundle\Entity\Category", inversedBy="products")
     * @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     */
    private $category;


    /**
    * @ORM\OneToMany(targetEntity="Shop\CatalogBundle\Entity\ProductDescription", mappedBy="product")
    */
    private $productDescriptions;

    /**
     * @ORM\OneToMany(targetEntity="Shop\CatalogBundle\Entity\Image", mappedBy="product")
     */
    private $images;

    public function __construct()
    {
        $this->products = new ArrayCollection();
        $this->createdAt = new \DateTime();
        //$this->shows = 0;
        //$this->rating = 0;
        $this->isActive = true;
    }

    /**
     * @param \DateTime $createdAt
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;
    }

    /**
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * @param int $id
     */
    public function setId($id)
    {
        $this->id = $id;
    }

    /**
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param string $image
     */
    public function setImage($image)
    {
        $this->image = $image;
    }

    /**
     * @return string
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * @param boolean $isActive
     */
    public function setIsActive($isActive)
    {
        $this->isActive = $isActive;
    }

    /**
     * @return boolean
     */
    public function getIsActive()
    {
        return $this->isActive;
    }

    /**
     * @param string $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * @param float $price
     */
    public function setPrice($price)
    {
        $this->price = $price;
    }

    /**
     * @return float
     */
    public function getPrice()
    {
        return $this->price;
    }

    /**
     * @param int $rating
     */
    public function setRating($rating)
    {
        $this->rating = $rating;
    }

    /**
     * @return int
     */
    public function getRating()
    {
        return $this->rating;
    }

    /**
     * @param int $shows
     */
    public function setShows($shows)
    {
        $this->shows = $shows;
    }

    /**
     * @return int
     */
    public function getShows()
    {
        return $this->shows;
    }




    /**
     * Set category
     *
     * @param \Shop\CatalogBundle\Entity\Category $category
     * @return Product
     */
    public function setCategory(\Shop\CatalogBundle\Entity\Category $category = null)
    {
        $this->category = $category;

        return $this;
    }

    /**
     * Get category
     *
     * @return \Shop\CatalogBundle\Entity\Category 
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * Add productDescriptions
     *
     * @param \Shop\CatalogBundle\Entity\ProductDescription $productDescriptions
     * @return Product
     */
    public function addProductDescription(\Shop\CatalogBundle\Entity\ProductDescription $productDescriptions)
    {
        $this->productDescriptions[] = $productDescriptions;

        return $this;
    }

    /**
     * Remove productDescriptions
     *
     * @param \Shop\CatalogBundle\Entity\ProductDescription $productDescriptions
     */
    public function removeProductDescription(\Shop\CatalogBundle\Entity\ProductDescription $productDescriptions)
    {
        $this->productDescriptions->removeElement($productDescriptions);
    }

    /**
     * Get productDescriptions
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getProductDescriptions()
    {
        return $this->productDescriptions;
    }
}
